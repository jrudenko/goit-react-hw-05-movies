{"version":3,"file":"static/js/613.2e75954b.chunk.js","mappings":"sKACA,MAAwB,2B,SCKxB,MAJA,YAAgC,IAATA,EAAQ,EAARA,KACrB,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,GACjC,C,gFCHD,GAAgB,WAAa,8BAA8B,YAAc,gC,kBCgDzE,EA7CkB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,+BACE,kBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACyB,KAAvBJ,EAAYK,QACdC,MAAM,wBAGRR,EAASE,GACTC,EAAe,GAChB,EAIiCL,UAAWC,EAAAA,WAAzC,WACE,kBACEU,KAAK,OACLC,KAAK,cACLC,MAAOT,EACPU,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZd,SAxBkB,SAAAK,GACxBF,EAAeE,EAAEU,OAAOJ,MAAMK,cAC/B,EAuBQlB,UAAWC,EAAAA,eAEd,mBACEU,KAAK,SACLX,UAAWC,EAAAA,aAFb,wBASP,E,0BCLD,EA9BmB,WAAO,IAAD,EACrB,GAAuCkB,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KAEMC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAA+B,IAE1CC,EAAAA,EAAAA,YAAU,WACFF,IACJG,EAAAA,EAAAA,IAAgBH,GAAOI,KAAKL,EAC/B,GAAE,CAACC,EAAOJ,IAQX,OACI,+BACI,2BACI,SAACS,EAAA,EAAD,CAAa9B,KAAM,kBAClB,SAAC,EAAD,CAAWc,MAAOW,EAAOtB,SATZ,SAACsB,GAE3BH,EAD6B,KAAVG,EAAe,CAAEA,MAAAA,GAAS,CAAC,EAE/C,IAOcF,EAAOQ,KAAI,SAACC,GAAD,OACpB,yBAAmB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,OAASH,EAAMnB,QAAjEmB,EAAME,GADK,QAM3B,C,uJCpCD,IAAME,EAAW,gCACXC,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IAC/CR,MAAK,SAAAW,GAAG,OAAIA,EAAIC,MAAR,IACRZ,MAAK,SAAAW,GAAG,OAAIA,EAAIE,OAAR,GACd,CAEM,SAASd,EAAgBvB,GAC9B,OAAOkC,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDhC,IAC5DwB,MAAK,SAAAW,GAAG,OAAIA,EAAIC,MAAR,IACRZ,MAAK,SAAAW,GAAG,OAAIA,EAAIE,OAAR,GACd,CAEM,SAASC,EAAgBC,GAC9B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,kBAAsBQ,EAAtB,oBAAyCP,IAClDR,MAAK,SAAAW,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASI,EAAoBD,GAClC,OAAOL,MAAM,GAAD,OAAIH,EAAJ,kBAAsBQ,EAAtB,4BAAiDP,IACxDR,MAAK,SAAAW,GAAG,OAAIA,EAAIC,MAAR,IACRZ,MAAK,SAAAW,GAAG,OAAIA,EAAIM,IAAR,GACd,CAEM,SAASC,EAAuBH,GACrC,OAAOL,MAAM,GAAD,OAAIH,EAAJ,kBAAsBQ,EAAtB,4BAAiDP,IAC1DR,MAAK,SAAAW,GAAG,OAAIA,EAAIC,MAAR,GAEZ,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/HeadingPage/HeadingPage.module.css?857a","pages/HeadingPage/HeadingPage.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/MoviesPage/MoviesPage.jsx","services/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HeadingPage_title__ma9pD\"};","import s from './HeadingPage.module.css';\n\nfunction HeadingPage({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n\nexport default HeadingPage;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBox_searchForm__SdqTH\",\"searchInput\":\"SearchBox_searchInput__RgkWt\"};","import s from './SearchBox.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ onChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onChange(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.searchForm} >\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies ...\"\n          onChange={handleQuerySearch}\n           className={s.searchInput}\n        />\n        <button\n          type=\"submit\"\n          className={s.searchButton}\n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;","import SearchBox from \"../../components/SearchBox\"\nimport HeadingPage from 'pages/HeadingPage';\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"\nimport { getSearchMovies } from \"../../services/API\"\nimport { Link } from \"react-router-dom\";\n\n\nconst MoviesPage = () => {\n    const [searchParams,setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n\n    const query = searchParams.get(\"query\")?? \"\";\n\n    useEffect(() => {\n        if (query) {\n        getSearchMovies(query).then(setMovies)};\n    }, [query, searchParams]);\n\n\n    const updateQueryString = (query) => {\n    const nextParams = query !== \"\" ? { query} : {};\n    setSearchParams(nextParams);\n  };\n    \n    return (\n        <>          \n            <ul>\n                <HeadingPage text={'Movie Search'}></HeadingPage>\n                 <SearchBox value={query} onChange={updateQueryString} />\n                {movies.map((movie) => (\n        <li key={movie.id}><Link to={`/movies/${movie.id}`}>{movie.title || movie.name}</Link></li>\n        ))}\n        </ul>\n    </>\n    );\n};\n\nexport default MoviesPage;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '94dbe73fcd84ac739d9a0f3a17326b65';\n\nexport function getTrendingMovies() {\n  return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(res => res.results);\n};\n\nexport function getSearchMovies(searchQuery) {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n      .then(res => res.json())\n      .then(res => res.results);\n};\n\nexport function getMovieDetails(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(res => res.json());\n};\n\nexport function getMovieDetailsCast(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(res => res.cast);\n};\n\nexport function getMovieDetailsReviews(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(res => res.json())\n  \n};"],"names":["text","className","s","onChange","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","query","get","useEffect","getSearchMovies","then","HeadingPage","map","movie","to","id","title","BASE_URL","API_KEY","getTrendingMovies","fetch","res","json","results","getMovieDetails","movieId","getMovieDetailsCast","cast","getMovieDetailsReviews"],"sourceRoot":""}